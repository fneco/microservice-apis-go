// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CancelOrder implements cancelOrder operation.
//
// Cancels an order.
//
// POST /orders/{order_id}/cancel
func (UnimplementedHandler) CancelOrder(ctx context.Context, params CancelOrderParams) (r CancelOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateOrder implements createOrder operation.
//
// Creates an order.
//
// POST /orders
func (UnimplementedHandler) CreateOrder(ctx context.Context, req *CreateOrderSchema) (r CreateOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteOrder implements deleteOrder operation.
//
// Deletes an existing order.
//
// DELETE /orders/{order_id}
func (UnimplementedHandler) DeleteOrder(ctx context.Context, params DeleteOrderParams) (r DeleteOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetOrder implements getOrder operation.
//
// Returns the details of a specific order.
//
// GET /orders/{order_id}
func (UnimplementedHandler) GetOrder(ctx context.Context, params GetOrderParams) (r GetOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetOrders implements getOrders operation.
//
// A list of orders made by the customer sorted by date. Allows to filter orders by range of dates.
//
// GET /orders
func (UnimplementedHandler) GetOrders(ctx context.Context, params GetOrdersParams) (r GetOrdersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PayOrder implements payOrder operation.
//
// Processes payment for an order.
//
// POST /orders/{order_id}/pay
func (UnimplementedHandler) PayOrder(ctx context.Context, params PayOrderParams) (r PayOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateOrder implements updateOrder operation.
//
// Replaces an existing order.
//
// PUT /orders/{order_id}
func (UnimplementedHandler) UpdateOrder(ctx context.Context, req *CreateOrderSchema, params UpdateOrderParams) (r UpdateOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}
