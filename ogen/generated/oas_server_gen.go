// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CancelOrder implements cancelOrder operation.
	//
	// Cancels an order.
	//
	// POST /orders/{order_id}/cancel
	CancelOrder(ctx context.Context, params CancelOrderParams) (CancelOrderRes, error)
	// CreateOrder implements createOrder operation.
	//
	// Creates an order.
	//
	// POST /orders
	CreateOrder(ctx context.Context, req *CreateOrderSchema) (CreateOrderRes, error)
	// DeleteOrder implements deleteOrder operation.
	//
	// Deletes an existing order.
	//
	// DELETE /orders/{order_id}
	DeleteOrder(ctx context.Context, params DeleteOrderParams) (DeleteOrderRes, error)
	// GetOrder implements getOrder operation.
	//
	// Returns the details of a specific order.
	//
	// GET /orders/{order_id}
	GetOrder(ctx context.Context, params GetOrderParams) (GetOrderRes, error)
	// GetOrders implements getOrders operation.
	//
	// A list of orders made by the customer sorted by date. Allows to filter orders by range of dates.
	//
	// GET /orders
	GetOrders(ctx context.Context, params GetOrdersParams) (GetOrdersRes, error)
	// PayOrder implements payOrder operation.
	//
	// Processes payment for an order.
	//
	// POST /orders/{order_id}/pay
	PayOrder(ctx context.Context, params PayOrderParams) (PayOrderRes, error)
	// UpdateOrder implements updateOrder operation.
	//
	// Replaces an existing order.
	//
	// PUT /orders/{order_id}
	UpdateOrder(ctx context.Context, req *CreateOrderSchema, params UpdateOrderParams) (UpdateOrderRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
